{"ast":null,"code":"// src/utils/socketClient.js\nimport { io } from 'socket.io-client';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\nexport const initSocket = () => {\n  const socket = io(SOCKET_URL, {\n    autoConnect: false,\n    reconnection: true,\n    reconnectionAttempts: 5,\n    reconnectionDelay: 1000,\n    reconnectionDelayMax: 5000\n  });\n  return socket;\n};\nexport const connectSocket = (socket, userId, username, isAnonymous, language) => {\n  socket.connect();\n  socket.emit('join_app', {\n    userId,\n    username,\n    isAnonymous,\n    language\n  });\n};\nexport const joinRoom = (socket, roomId, username) => {\n  socket.emit('join_room', {\n    roomId,\n    username\n  });\n};\nexport const sendMessage = (socket, content, roomId) => {\n  socket.emit('send_message', {\n    content,\n    roomId\n  });\n};\nexport const toggleAnonymous = (socket, isAnonymous) => {\n  socket.emit('toggle_anonymous', {\n    isAnonymous\n  });\n};\nexport const changeLanguage = (socket, language) => {\n  socket.emit('change_language', {\n    language\n  });\n};\nexport const setupSocketListeners = (socket, handlers) => {\n  const cleanupFunctions = [() => socket.off('connect'), () => socket.off('disconnect'), () => socket.off('connect_error'), () => socket.off('user_data'), () => socket.off('room_joined'), () => socket.off('user_joined'), () => socket.off('user_left'), () => socket.off('receive_message'), () => socket.off('anonymous_toggled'), () => socket.off('language_changed'), () => socket.off('room_expired')];\n  socket.on('connect', () => {\n    var _handlers$onConnect;\n    return (_handlers$onConnect = handlers.onConnect) === null || _handlers$onConnect === void 0 ? void 0 : _handlers$onConnect.call(handlers);\n  });\n  socket.on('disconnect', () => {\n    var _handlers$onDisconnec;\n    return (_handlers$onDisconnec = handlers.onDisconnect) === null || _handlers$onDisconnec === void 0 ? void 0 : _handlers$onDisconnec.call(handlers);\n  });\n  socket.on('connect_error', err => {\n    var _handlers$onConnectEr;\n    return (_handlers$onConnectEr = handlers.onConnectError) === null || _handlers$onConnectEr === void 0 ? void 0 : _handlers$onConnectEr.call(handlers, err);\n  });\n  socket.on('user_data', data => {\n    var _handlers$onUserData;\n    return (_handlers$onUserData = handlers.onUserData) === null || _handlers$onUserData === void 0 ? void 0 : _handlers$onUserData.call(handlers, data);\n  });\n  socket.on('room_joined', data => {\n    var _handlers$onRoomJoine;\n    return (_handlers$onRoomJoine = handlers.onRoomJoined) === null || _handlers$onRoomJoine === void 0 ? void 0 : _handlers$onRoomJoine.call(handlers, data);\n  });\n  socket.on('user_joined', data => {\n    var _handlers$onUserJoine;\n    return (_handlers$onUserJoine = handlers.onUserJoined) === null || _handlers$onUserJoine === void 0 ? void 0 : _handlers$onUserJoine.call(handlers, data);\n  });\n  socket.on('user_left', data => {\n    var _handlers$onUserLeft;\n    return (_handlers$onUserLeft = handlers.onUserLeft) === null || _handlers$onUserLeft === void 0 ? void 0 : _handlers$onUserLeft.call(handlers, data);\n  });\n  socket.on('receive_message', data => {\n    var _handlers$onReceiveMe;\n    return (_handlers$onReceiveMe = handlers.onReceiveMessage) === null || _handlers$onReceiveMe === void 0 ? void 0 : _handlers$onReceiveMe.call(handlers, data);\n  });\n  socket.on('anonymous_toggled', data => {\n    var _handlers$onAnonymous;\n    return (_handlers$onAnonymous = handlers.onAnonymousToggled) === null || _handlers$onAnonymous === void 0 ? void 0 : _handlers$onAnonymous.call(handlers, data);\n  });\n  socket.on('language_changed', data => {\n    var _handlers$onLanguageC;\n    return (_handlers$onLanguageC = handlers.onLanguageChanged) === null || _handlers$onLanguageC === void 0 ? void 0 : _handlers$onLanguageC.call(handlers, data);\n  });\n  socket.on('room_expired', () => {\n    var _handlers$onRoomExpir;\n    return (_handlers$onRoomExpir = handlers.onRoomExpired) === null || _handlers$onRoomExpir === void 0 ? void 0 : _handlers$onRoomExpir.call(handlers);\n  });\n  return () => cleanupFunctions.forEach(fn => fn());\n};","map":{"version":3,"names":["io","SOCKET_URL","process","env","REACT_APP_SOCKET_URL","initSocket","socket","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","connectSocket","userId","username","isAnonymous","language","connect","emit","joinRoom","roomId","sendMessage","content","toggleAnonymous","changeLanguage","setupSocketListeners","handlers","cleanupFunctions","off","on","_handlers$onConnect","onConnect","call","_handlers$onDisconnec","onDisconnect","err","_handlers$onConnectEr","onConnectError","data","_handlers$onUserData","onUserData","_handlers$onRoomJoine","onRoomJoined","_handlers$onUserJoine","onUserJoined","_handlers$onUserLeft","onUserLeft","_handlers$onReceiveMe","onReceiveMessage","_handlers$onAnonymous","onAnonymousToggled","_handlers$onLanguageC","onLanguageChanged","_handlers$onRoomExpir","onRoomExpired","forEach","fn"],"sources":["C:/Users/user/Desktop/Vault/fullstack - mern/week-5-web-sockets-assignment-MellonP/socketio-chat/client/src/socket/socketClient.js"],"sourcesContent":["// src/utils/socketClient.js\r\nimport { io } from 'socket.io-client';\r\n\r\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\r\n\r\nexport const initSocket = () => {\r\n  const socket = io(SOCKET_URL, {\r\n    autoConnect: false,\r\n    reconnection: true,\r\n    reconnectionAttempts: 5,\r\n    reconnectionDelay: 1000,\r\n    reconnectionDelayMax: 5000,\r\n  });\r\n  return socket;\r\n};\r\n\r\nexport const connectSocket = (socket, userId, username, isAnonymous, language) => {\r\n  socket.connect();\r\n  socket.emit('join_app', { userId, username, isAnonymous, language });\r\n};\r\n\r\nexport const joinRoom = (socket, roomId, username) => {\r\n  socket.emit('join_room', { roomId, username });\r\n};\r\n\r\nexport const sendMessage = (socket, content, roomId) => {\r\n  socket.emit('send_message', { content, roomId });\r\n};\r\n\r\nexport const toggleAnonymous = (socket, isAnonymous) => {\r\n  socket.emit('toggle_anonymous', { isAnonymous });\r\n};\r\n\r\nexport const changeLanguage = (socket, language) => {\r\n  socket.emit('change_language', { language });\r\n};\r\n\r\nexport const setupSocketListeners = (socket, handlers) => {\r\n  const cleanupFunctions = [\r\n    () => socket.off('connect'),\r\n    () => socket.off('disconnect'),\r\n    () => socket.off('connect_error'),\r\n    () => socket.off('user_data'),\r\n    () => socket.off('room_joined'),\r\n    () => socket.off('user_joined'),\r\n    () => socket.off('user_left'),\r\n    () => socket.off('receive_message'),\r\n    () => socket.off('anonymous_toggled'),\r\n    () => socket.off('language_changed'),\r\n    () => socket.off('room_expired'),\r\n  ];\r\n\r\n  socket.on('connect', () => handlers.onConnect?.());\r\n  socket.on('disconnect', () => handlers.onDisconnect?.());\r\n  socket.on('connect_error', (err) => handlers.onConnectError?.(err));\r\n  socket.on('user_data', (data) => handlers.onUserData?.(data));\r\n  socket.on('room_joined', (data) => handlers.onRoomJoined?.(data));\r\n  socket.on('user_joined', (data) => handlers.onUserJoined?.(data));\r\n  socket.on('user_left', (data) => handlers.onUserLeft?.(data));\r\n  socket.on('receive_message', (data) => handlers.onReceiveMessage?.(data));\r\n  socket.on('anonymous_toggled', (data) => handlers.onAnonymousToggled?.(data));\r\n  socket.on('language_changed', (data) => handlers.onLanguageChanged?.(data));\r\n  socket.on('room_expired', () => handlers.onRoomExpired?.());\r\n\r\n  return () => cleanupFunctions.forEach((fn) => fn());\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}